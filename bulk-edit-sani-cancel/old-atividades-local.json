{
    "fieldGroup": [
        {
            "wrappers": [ "form-field", "consumeDataset" ],
            "key": "codigo_cbo",
            "type": "next-input",
            "templateOptions": {
                "label": "Informe o código CBO de profissional autonomo",
                "datasetReference": "653ff48094c1c70006fe3bc5",
                "datasetKey": "Cód. CBO",
                "autocomplete": true,
                "hideData": true,
                "required": false,
                "focus": false,
                "disabled": false,
                "readonly": false
            },
            "resetOnHide": true,
            "expressionProperties": {
                "templateOptions|||hidden": "model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cnpj'  : true",
                "templateOptions|||required": "!(model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cnpj'  : true)"
            }
        },
        {
            "key": "descricao_cbo",
            "type": "next-input",
            "templateOptions": { "label": "Descrição da CBO", "focus": "false", "type": "text", "required": false },
            "expressionProperties": {
                "model|||descricao_cbo": "model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'Descrição'))?.value : model.descricao_cbo : model.descricao_cbo : model.descricao_cbo : model.descricao_cbo",
                "templateOptions|||hidden": "model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cnpj'  : true",
                "templateOptions|||required": "!(model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cnpj'  : true)"
            }
        },
        {
            "key": "lista_cnaes_cbo",
            "type": "next-repeat",
            "templateOptions": {
                "label": "Atividades CBO",
                "focus": "false",
                "btnAddText": "Atividades",
                "required": false,
                "placeholder": ""
            },
            "fieldArray": {
                "fieldGroup": [
                    {
                        "wrappers": [ "form-field", "consumeDataset" ],
                        "key": "cnae_busca_cbo",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Informe o Código da Atividade Principal",
                            "datasetReference": "64dbb9a862e2240006d6ec42",
                            "datasetKey": "subclasse",
                            "autocomplete": true,
                            "hideData": true,
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "disabled": false,
                            "readonly": true,
                            "hidden": false
                        },
                        "resetOnHide": true,
                        "expressionProperties": {
                            "model|||cnae_busca_cbo": "field.parent.templateOptions.index == 0 ? {'input': (model.codigo_cbo?.input_data?.data || []).find((item)=> (item.key == 'CNAEA'))?.value } : field.parent.templateOptions.index == 1 ? {'input': (model.codigo_cbo?.input_data?.data || []).find((item)=> (item.key == 'CNAEB'))?.value } : field.parent.templateOptions.index == 2 ? {'input': (model.codigo_cbo?.input_data?.data || []).find((item)=> (item.key == 'CNAEC'))?.value } : ''"
                        }
                    },
                    {
                        "key": "nome_atividade_cbo",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Nome Atividade Principal",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true
                        },
                        "expressionProperties": {
                            "model|||nome_atividade_cbo": "(model.cnae_busca_cbo?.input_data?.data || []).find((item)=> (item.key == 'denominacao'))?.value"
                        }
                    },
                    {
                        "key": "radio_encaixa",
                        "type": "radio",
                        "templateOptions": {
                            "label": "Essa CNAE se encaixa na atividade que você está exercendo?",
                            "options": [ { "value": "Sim" }, { "value": "Não" } ],
                            "focus": "false",
                            "required": true
                        },
                        "expressionProperties": {
                            "templateOptions|||required": "(model.cpf_cnpj_responsavel?.type == 'cpf' && model.cbo_risk != 'Baixo Risco')"
                        }
                    }
                ]
            },
            "expressionProperties": {
                "templateOptions|||repeats": "model.codigo_cbo?.input_data?.data?.find((item)=> (item.key == 'CNAEC'))?.value == 'NO' ? model.codigo_cbo?.input_data?.data?.find((item)=> (item.key == 'CNAEB'))?.value == 'NO' ? 1 : 2 : 3",
                "templateOptions|||hidden": "model.cpf_cnpj_responsavel ? (model.cpf_cnpj_responsavel.type == 'cnpj' || (model.cpf_cnpj_responsavel.type == 'cpf' && model.cbo_risk == 'Baixo Risco')) : true",
                "templateOptions|||required": "!(model.cpf_cnpj_responsavel ? (model.cpf_cnpj_responsavel.type == 'cnpj' || (model.cpf_cnpj_responsavel.type == 'cpf' && model.cbo_risk == 'Baixo Risco')) : true)"
            }
        },
        {
            "key": "perguntinha",
            "type": "radio",
            "templateOptions": {
                "label": "Pergunta do risco",
                "options": [ { "value": "Sim" }, { "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||label": "model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'pergunta_a'))?.value : 'ERRO' : 'ERRO' : 'ERRO' : 'ERRO'",
                "templateOptions|||hidden": "model.cbo_risco !== 'PERGUNTA'",
                "templateOptions|||required": "model.cbo_risco == 'PERGUNTA'"
            }
        },
        {
            "key": "pba_hidden",
            "type": "next-input",
            "templateOptions": {
                "label": "Validação PBA",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true
            },
            "expressionProperties": {
                "model|||pba_hidden": "model.perguntinha == 'Sim' ? model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'resposta_pba_sim'))?.value : 'ERRO' : 'ERRO' : 'ERRO' : 'ERRO' : model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'resposta_pba_nao'))?.value : 'ERRO' : 'ERRO' : 'ERRO' : 'ERRO' "
            }
        },
        {
            "key": "risco_hidden",
            "type": "next-input",
            "templateOptions": {
                "label": "Validação RISCO",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true
            },
            "expressionProperties": {
                "model|||risco_hidden": "model.perguntinha == 'Sim' ? model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'resposta_risco_sim'))?.value : 'ERRO' : 'ERRO' : 'ERRO' : 'ERRO' : model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'resposta_risco_nao'))?.value : 'ERRO' : 'ERRO' : 'ERRO' : 'ERRO' "
            }
        },
        {
            "key": "texto_hidden",
            "type": "next-input",
            "templateOptions": {
                "label": "EU PUXO O TEXTO QUE VAI PRO DOC",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true
            },
            "expressionProperties": {
                "model|||pba_hidden": "model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'texto'))?.value"
            }
        },
        {
            "key": "cbo_risco",
            "type": "next-input",
            "templateOptions": {
                "label": "RISCO (Auxiliar)",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true
            },
            "expressionProperties": {
                "model|||cbo_risco": "model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'risco'))?.value : model.cbo_risco : model.cbo_risco : model.cbo_risco : model.cbo_risco"
            }
        },
        {
            "key": "cbo_pba",
            "type": "next-input",
            "templateOptions": {
                "label": "PBA (Auxiliar)",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true
            },
            "expressionProperties": {
                "model|||cbo_pba": "model.codigo_cbo ? model.codigo_cbo.input ? model.codigo_cbo.input_data ? model.codigo_cbo.input_data.data ? model.codigo_cbo.input_data.data.find((item)=> (item.key == 'pba'))?.value : model.cbo_pba : model.cbo_pba : model.cbo_pba : model.cbo_pba"
            }
        },
        {
            "key": "cbo_ark",
            "type": "next-input",
            "templateOptions": {
                "label": "PBA",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": false,
                "hidden": true,
                "readonly": true
            },
            "expressionProperties": {
                "model|||cbo_ark": "model.cbo_pba !== 'PERGUNTA' ? model.cbo_pba : model.pba_hidden"
            }
        },
        {
            "key": "cbo_risk",
            "type": "next-input",
            "templateOptions": {
                "label": "Risco",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": true,
                "readonly": true
            },
            "expressionProperties": {
                "model|||cbo_risk": "model.cbo_risco !== 'PERGUNTA' ? model.cbo_risco : model.risco_hidden",
                "templateOptions|||hidden": "model.cpf_cnpj_responsavel?.type == 'cnpj'",
                "templateOptions|||required": "model.cpf_cnpj_responsavel?.type  == 'cpf' "
            }
        },
        {
            "key": "lista_cnaes",
            "type": "next-repeat",
            "templateOptions": {
                "label": "CNAEs",
                "focus": "false",
                "btnAddText": "CNAE",
                "required": false,
                "placeholder": ""
            },
            "fieldArray": {
                "fieldGroup": [
                    {
                        "wrappers": [ "form-field", "consumeDataset" ],
                        "key": "cnae_busca",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Informe o Código da Atividade Principal",
                            "datasetReference": "64dbb9a862e2240006d6ec42",
                            "datasetKey": "subclasse",
                            "autocomplete": true,
                            "hideData": true,
                            "required": true,
                            "mask": "0000-0/00",
                            "keepMask": true,
                            "focus": false,
                            "disabled": false,
                            "readonly": false
                        },
                        "resetOnHide": true
                    },
                    {
                        "key": "nome_atividade",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Nome Atividade Principal",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true
                        },
                        "expressionProperties": {
                            "model|||nome_atividade": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'denominacao'))?.value"
                        }
                    },
                    {
                        "key": "contrato_social",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Contrato Social",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||contrato_social": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'contrato_social'))?.value"
                        }
                    },
                    {
                        "key": "cartao_cnpj",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Cartão CNPJ",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||cartao_cnpj": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'cartao_cnpj'))?.value"
                        }
                    },
                    {
                        "key": "cartao_cnae",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "CNAE",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||cartao_cnae": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'cartao_cnpj'))?.value"
                        }
                    },
                    {
                        "key": "pba_cnae",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Projeto Básico de Arquitetura",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||pba_cnae": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'pba'))?.value"
                        }
                    },
                    {
                        "key": "reponsavel_cnae",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "Responsável Técnico",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||reponsavel_cnae": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'rt'))?.value"
                        }
                    },
                    {
                        "key": "classificacao_primeira",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "classificacao_primeira",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "hidden": true,
                            "readonly": true
                        },
                        "expressionProperties": {
                            "model|||classificacao_primeira": "(model.cnae_busca?.input_data?.data || []).find((item)=> (item.key == 'risco'))?.value"
                        }
                    },
                    {
                        "key": "pergunta_primeira",
                        "type": "radio",
                        "templateOptions": {
                            "label": "Label da pergunta 1",
                            "options": [ { "value": "Sim" }, { "value": "Não" } ],
                            "hidden": false,
                            "required": true
                        },
                        "hideExpression": " model.classificacao_primeira != 'pergunta' ",
                        "expressionProperties": {
                            "templateOptions|||label": "(()=>{if(model.classificacao_primeira == 'pergunta'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'pergunta_a')?.value}else{return 'Não Considerar'}})()"
                        }
                    },
                    {
                        "key": "classificacao_primeira_pergunta",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "classificacao_primeira_pergunta",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||classificacao_primeira_pergunta": "(()=>{if(model?.pergunta_primeira == 'Sim'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'resposta_a_sim')?.value}else if(model?.pergunta_primeira == 'Não'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'resposta_a_nao')?.value}else{return 'dispensado'}})()"
                        }
                    },
                    {
                        "key": "pergunta_segunda",
                        "type": "radio",
                        "templateOptions": {
                            "label": "Label da pergunta 2",
                            "options": [ { "value": "Sim" }, { "value": "Não" } ],
                            "focus": "false",
                            "required": true
                        },
                        "expressionProperties": {
                            "templateOptions|||label": "(()=>{if(model.classificacao_primeira == 'pergunta'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'pergunta_b')?.value}else{return 'Não Considerar'}})()"
                        },
                        "hideExpression": "model.classificacao_primeira !== 'pergunta' || !(model?.cnae_busca?.input_data?.data || []).find(item => item?.key === 'pergunta_b' && item?.value)"
                    },
                    {
                        "key": "classificacao_segunda_pergunta",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "classificacao_primeira",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||classificacao_segunda_pergunta": "(()=>{if(model?.pergunta_segunda == 'Sim'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'resposta_b_sim')?.value}else if(model?.pergunta_segunda == 'Não'){return (model?.cnae_busca?.input_data?.data || []).find((item) => item.key == 'resposta_b_nao')?.value}else{return 'dispensado'}})()"
                        }
                    },
                    {
                        "key": "classificacao_final",
                        "type": "next-input",
                        "templateOptions": {
                            "label": "classificacao final",
                            "focus": "false",
                            "type": "text",
                            "required": false,
                            "readonly": true,
                            "hidden": true
                        },
                        "expressionProperties": {
                            "model|||classificacao_final": "model?.classificacao_primeira == 'Inspeção Prévia' || model?.classificacao_primeira_pergunta == 'Inspeção Prévia' || model?.classificacao_segunda_pergunta == 'Inspeção Prévia' ? 'Inspeção Prévia' : model?.classificacao_primeira == 'autodeclaracao' || model?.classificacao_primeira_pergunta == 'autodeclaracao' || model?.classificacao_segunda_pergunta == 'autodeclaracao' ? 'autodeclaracao' : 'dispensado'"
                        }
                    }
                ]
            },
            "expressionProperties": {
                "templateOptions|||hidden": "model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cpf' : true",
                "templateOptions|||required": "!(model.cpf_cnpj_responsavel ? model.cpf_cnpj_responsavel.type == 'cpf' : true)"
            }
        },
        {
            "key": "tipo_risco",
            "type": "next-input",
            "templateOptions": {
                "label": "Tipo de Enquadramento",
                "focus": "false",
                "type": "text",
                "required": false,
                "readonly": true
            },
            "expressionProperties": {
                "model|||tipo_risco": "(model.cbo_risk == 'ALTO' || (model.lista_cnaes || []).filter((item)=> (item.classificacao_final == 'Inspeção Prévia')).length > 0) ? 'Inspeção Prévia' : (model.cbo_risk == 'MEDIO' || (model.lista_cnaes || []).filter((item)=> (item.classificacao_final == 'autodeclaracao')).length > 0) ? 'Autodeclaração' : 'Dispensado'"
            }
        },
        {
            "key": "aviso_dispensa_licenciamento",
            "type": "next-html",
            "templateOptions": {
                "textHtml": "<div class='flex flex-col mt-2 p-4 rounded bg-green-100 font-medium text-green-800'><div class='flex space-x-1 text-green-500 mb-2' ><div><svg xmlns='http://www.w3.org/2000/svg' class='h-5 w-5' viewBox='0 0 20 20' fill='currentColor'> <path fill-rule='evenodd' d='M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z' clip-rule='evenodd' /> </svg></div><div class=' text-yellow-800' >Atenção</div></div><div>A atividade é dispensada de licenciamento</div></div><br>",
                "focus": "false",
                "type": "text",
                "readonly": true
            },
            "hideExpression": "model.tipo_risco !== 'Dispensado'"
        },
        {
            "key": "contrato_social_documento",
            "type": "next-upload",
            "templateOptions": { "label": "Contrato Social", "options": [], "focus": "false", "required": true },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('contrato_social')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'contrato_social'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('contrato_social')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'contrato_social'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "cartao_cnpj_anexado",
            "type": "next-upload",
            "templateOptions": { "label": "Cartão CNPJ", "options": [], "focus": "false", "required": false },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('cartao_cnpj')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'cartao_cnpj'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('cartao_cnpj')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'cartao_cnpj'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "transporte_area_fisica",
            "type": "select",
            "templateOptions": {
                "label": "Possui área física?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "(() => { try { const areaIsPossibleDisable = (model.lista_cnaes || []).find((ele) => ele.cnae_busca.input_data.data.find((item) => item.key === 'pode_nao_ter_area_fisica' && item.value === 'Sim' ) ); const codigoCboCheck = (model?.codigo_cbo?.input_data?.data || []).find((item) => item.key === 'pode_nao_ter_area_fisica' )?.value !== 'Sim'; return !areaIsPossibleDisable && codigoCboCheck; } catch { return false; }})();"
        },
        {
            "key": "nome_responsavel",
            "resetOnHide": true,
            "type": "next-input",
            "templateOptions": { "label": "Nome do Responsável Técnico" },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "cpf_responsavel",
            "type": "next-input",
            "templateOptions": {
                "label": "CPF do Responsável",
                "placeholder": "000.000.000-00",
                "mask": "000.000.000-00",
                "focus": "false",
                "type": "text",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "numero_registro_responsavel",
            "type": "next-input",
            "templateOptions": {
                "label": "Nº de registro no conselho prof.",
                "focus": "false",
                "type": "text",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "tipo_registro_responsavel",
            "type": "select",
            "templateOptions": {
                "label": "Tipo de Conselho",
                "options": [
                    { "label": "Biomedicina", "value": "Biomedicina" },
                    { "label": "Médico Veterinário", "value": "Médico Veterinário" },
                    { "label": "Educação Física", "value": "Educação Física" },
                    { "label": "Enfermagem", "value": "Enfermagem" },
                    { "label": "Engenharia/Agronomia", "value": "Engenharia/Agronomia" },
                    { "label": "Farmácia", "value": "Farmácia" },
                    { "label": "Fisioterapia", "value": "Fisioterapia" },
                    { "label": "Medicina", "value": "Medicina" },
                    { "label": "Nutrição", "value": "Nutrição" },
                    { "label": "Odontologia", "value": "Odontologia" },
                    { "label": "Química", "value": "Química" }
                ],
                "focus": "false",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "identificacao_conselho",
            "type": "next-upload",
            "templateOptions": {
                "label": "Carteira de Identificação do Conselho Regional ou Federal",
                "options": [],
                "focus": "false",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "comprovacao_especializacao",
            "type": "next-upload",
            "templateOptions": {
                "label": "Comprovação de Especialização (diploma ou certificação expedida pelo conselho regional e/ou federal)",
                "options": [],
                "focus": "false",
                "required": false,
                "hidden": false
            },
            "hideExpression": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();"
        },
        {
            "key": "rrt_upload",
            "type": "next-upload",
            "templateOptions": {
                "label": "Registro de Responsabilidade Técnica",
                "options": [],
                "focus": "false",
                "required": true
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('resp_tecnico')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'resp_tecnico'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "layout_pba",
            "type": "next-upload",
            "templateOptions": {
                "label": "Layout (em escala 1:50)",
                "options": [],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "anotacao_resp_pba",
            "type": "next-upload",
            "templateOptions": {
                "label": "Anotação/Registro de Responsabilidade Técnica",
                "options": [],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "memorial_instalacoes",
            "type": "next-upload",
            "templateOptions": {
                "label": "Memorial Descritivo das Instalações",
                "options": [],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "relatorio_tecnico",
            "type": "next-upload",
            "templateOptions": {
                "label": "Relatório Técnico das Atividades",
                "options": [],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "protocolo_preenchimento",
            "type": "next-upload",
            "templateOptions": {
                "label": "Protocolo de preenchimento do Plano de Gerenciamento de Resíduos de Serviços de Saúde",
                "options": [],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "metragem_area",
            "type": "next-input",
            "templateOptions": {
                "label": "Metragem da obra",
                "placeholder": " ",
                "focus": "false",
                "type": "text",
                "required": true,
                "floatNumber": true,
                "suffix": "m2"
            },
            "expressionProperties": {
                "templateOptions|||hidden": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const lista_cnaes = model['lista_cnaes'] || []; const firstCondition = lista_cnaes.length > 0 && (lista_cnaes[0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return false; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return !req_doc; } return true;})();",
                "templateOptions|||required": "(() => { const tipo_risco = model.tipo_risco; const type_docs_risk = { 'Dispensado': 'docs_baixo_risco_sanitario', 'Autodeclaração': 'docs_medio_risco_sanitario', 'Inspeção Prévia': 'docs_alto_risco_sanitario' }[tipo_risco]; const firstCondition = (model['lista_cnaes'][0]?.cnae_busca?.input_data?.data || []) .some(doc => doc.key === type_docs_risk && doc.value.split(' ').includes('projeto_basico_arq')); if (firstCondition) { return true; } const cpf_cnpj_responsavel = model.cpf_cnpj_responsavel; if (cpf_cnpj_responsavel?.type === 'cpf') { const type_doc = 'projeto_basico_arq'; const req_doc = (model?.codigo_cbo?.input_data?.data || []) .find(item => item.key == type_docs_risk)?.value?.split(' ')?.includes(type_doc); return req_doc || false; } return false;})();"
            }
        },
        {
            "key": "dispensa_medicamentos",
            "type": "select",
            "templateOptions": {
                "label": "Dispensa de medicamentos ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "medicamentos_controle",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "Informe o tipo de controle dos medicamentos",
                "options": [
                    { "label": "Antimicrobianos", "value": "Antimicrobianos" },
                    {
                        "label": "Não Sujeitos ao Controle Especial",
                        "value": "Não Sujeitos ao Controle Especial"
                    },
                    {
                        "label": "Sujeitos ao Controle Especial",
                        "value": "Sujeitos ao Controle Especial"
                    }
                ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.dispensa_medicamentos && model.dispensa_medicamentos === 'Sim')"
        },
        {
            "key": "tipos_medicamentos_controlados",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "Quais tipos de medicamentos controlados",
                "options": [
                    { "label": "A", "value": "A" },
                    { "label": "B1", "value": "B1" },
                    { "label": "B2", "value": "B2" },
                    { "label": "C1", "value": "C1" },
                    { "label": "C2", "value": "C2" },
                    { "label": "C5", "value": "C5" }
                ],
                "focus": "false",
                "required": false
            },
            "hideExpression": "!(model.medicamentos_controle && model.medicamentos_controle['Sujeitos ao Controle Especial'] === true)"
        },
        {
            "key": "dispensa_medicamento_remoto",
            "type": "select",
            "templateOptions": {
                "label": "Dispensação de Medicamentos Solicitados por Meio Remoto ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "comercioCosmeticosPerfumesHigieneSaude",
            "type": "select",
            "templateOptions": {
                "label": "Comércio de Cosméticos, Perfumes, Produtos de Higiene e Produtos para Saúde?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "comercioAlimentosLeisEstaduais",
            "type": "select",
            "templateOptions": {
                "label": "Comércio de Alimentos conforme Leis Estaduais 16.473 de 26/09/2014 e 17.916 de 28/01/2020 ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "fracionamentoMedicamentos",
            "type": "select",
            "templateOptions": {
                "label": "Fracionamento de Medicamentos conforme RDC 80/2006 ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "prestacaoServicosFarmaceuticos",
            "type": "select",
            "templateOptions": {
                "label": "Prestação de Serviços Farmacêuticos ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "tipos_servico_farmaceutico",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "Selecione os tipos de serviço",
                "options": [
                    {
                        "label": "Medição de Temperatura Corporal",
                        "value": "Medição de Temperatura Corporal"
                    },
                    {
                        "label": "Acompanhamento Farmacoterapêutico",
                        "value": "Acompanhamento Farmacoterapêutico"
                    },
                    {
                        "label": "Aplicação de Inalação ou Nebulização",
                        "value": "Aplicação de Inalação ou Nebulização"
                    },
                    {
                        "label": "Aplicação Subcutânea, Intramuscular ou Intradérmica de Medicamentos Injetáveis",
                        "value": "Aplicação Subcutânea, Intramuscular ou Intradérmica de Medicamentos Injetáveis"
                    },
                    {
                        "label": "Medição e Monitoramento de Glicemia Capilar",
                        "value": "Medição e Monitoramento de Glicemia Capilar"
                    },
                    {
                        "label": "Transfixação Dérmica de Adereços Estéreis",
                        "value": "Transfixação Dérmica de Adereços Estéreis"
                    },
                    {
                        "label": "Aferição de Pressão Arterial",
                        "value": "Aferição de Pressão Arterial"
                    },
                    {
                        "label": "Perfuração de Lóbulo Auricular",
                        "value": "Perfuração de Lóbulo Auricular"
                    },
                    { "label": "Atenção Farmacêutica", "value": "Atenção Farmacêutica" },
                    {
                        "label": "Exames de Análises Clínicas",
                        "value": "Exames de Análises Clínicas"
                    },
                    { "label": "Sala de Vacina", "value": "Sala de Vacina" }
                ],
                "focus": "false",
                "required": false
            },
            "hideExpression": "!(model.prestacaoServicosFarmaceuticos === 'Sim')"
        },
        {
            "key": "salas_vacina",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "Quais as opções de sala de vacina tem:",
                "options": [
                    { "label": "Vacinação Extramuro", "value": "Vacinação Extramuro" },
                    { "label": "Vacinação Domiciliar", "value": "Vacinação Domiciliar" }
                ],
                "focus": "false",
                "required": false
            },
            "expressionProperties": {
                "hideExpression": "!(model.tipos_servico_farmaceutico && model.tipos_servico_farmaceutico['Sala de Vacina'] && model.tipos_servico_farmaceutico['Sala de Vacina'] === true)"
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "is_farmacia_manipulacao",
            "type": "select",
            "templateOptions": {
                "label": "É farmacia de manipulação ?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "itens_farmacia_manipulacao",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "Itens para farmacias de manipulação",
                "options": [
                    { "label": "Produtos Oficinais", "value": "Produtos Oficinais" },
                    { "label": "Produtos Magistrais", "value": "Produtos Magistrais" },
                    {
                        "label": "Grupo I - Medicamentos a partir de Insumos/Matérias Primas, Inclusive de Origem Vegetal",
                        "value": "Grupo I - Medicamentos a partir de Insumos/Matérias Primas, Inclusive de Origem Vegetal"
                    },
                    {
                        "label": "Grupo II - De Substâncias De Baixo Índice Terapêutico",
                        "value": "Grupo II - De Substâncias De Baixo Índice Terapêutico"
                    },
                    { "label": "Grupo III", "value": "Grupo III" }
                ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.is_farmacia_manipulacao === 'Sim')"
        },
        {
            "key": "grupo2_medicamentos_tipo_uso",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "(Sobre grupo II) - As substâncias de baixo índice terapêutico são para:",
                "options": [
                    { "label": "Para uso interno", "value": "Para uso interno" },
                    { "label": "Para uso externo", "value": "Para uso externo" }
                ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.itens_farmacia_manipulacao && model.itens_farmacia_manipulacao['Grupo II - De Substâncias De Baixo Índice Terapêutico'] && model.itens_farmacia_manipulacao['Grupo II - De Substâncias De Baixo Índice Terapêutico'] === true)"
        },
        {
            "key": "tipos_medicamentos_grupo3",
            "type": "multicheckbox",
            "templateOptions": {
                "label": "(Sobre o grupo III) Quais os tipos de medicamentos usados?",
                "options": [
                    { "label": "Antibióticos", "value": "Antibióticos" },
                    {
                        "label": "Hormônios para uso interno",
                        "value": "Hormônios para uso interno"
                    },
                    {
                        "label": "Hormônios para uso externo",
                        "value": "Hormônios para uso externo"
                    },
                    { "label": "Citostáticos", "value": "Citostáticos" },
                    {
                        "label": "Substâncias Sujeitas ao Controle Especial",
                        "value": "Substâncias Sujeitas ao Controle Especial"
                    }
                ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.itens_farmacia_manipulacao && model.itens_farmacia_manipulacao['Grupo III'] && model.itens_farmacia_manipulacao['Grupo III'] === true)"
        },
        {
            "key": "grupo4_produtos_estereis",
            "type": "select",
            "templateOptions": {
                "label": "Grupo IV - Produtos Estéreis",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.is_farmacia_manipulacao === 'Sim') && !(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "grupo5_medicamentos_homeopaticos",
            "type": "select",
            "templateOptions": {
                "label": "Grupo V - Medicamentos Homeopáticos",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.is_farmacia_manipulacao === 'Sim') && !(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "possui_liminar_servico",
            "type": "select",
            "templateOptions": {
                "label": "O ESTABELECIMENTO POSSUI LIMINAR PARA REALIZAÇÃO DE ALGUMA ATIVIDADE/SERVIÇO?",
                "options": [ { "label": "Sim", "value": "Sim" }, { "label": "Não", "value": "Não" } ],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model['lista_cnaes'] || []).find((cnae) => cnae.cnae_busca.input_data?.data[0].value === '4771-7/01')"
        },
        {
            "key": "arquivo_liminar_servico",
            "type": "next-upload",
            "templateOptions": {
                "label": "Envie a liminar de serviço",
                "options": [],
                "focus": "false",
                "required": true
            },
            "hideExpression": "!(model.possui_liminar_servico === 'Sim')"
        },
        {
            "key": "liminar_farmacia",
            "type": "next-input",
            "templateOptions": {
                "label": "Numero da liminar",
                "placeholder": "Digite o numero da liminar",
                "focus": "false",
                "type": "text",
                "required": true
            },
            "hideExpression": "!(model.possui_liminar_servico === 'Sim')"
        },
        {
            "key": "aux_valor_upm",
            "type": "next-html",
            "wrappers": [ "integrations" ],
            "templateOptions": {
                "hideData": true,
                "type": "text",
                "focus": "false",
                "readonly": true,
                "hidden": true,
                "saveIntegrationResponse": true,
                "idIntegration": "671255c787cd030007196ec1",
                "label": "aux_valor_upm"
            },
            "expressionProperties": {
                "model|||aux_valor_upm": "{ input: {} }",
                "templateOptions|||label": "model.last_data"
            }
        },
        {
            "key": "valor_upm",
            "type": "next-html",
            "defaultValue": 388.6,
            "templateOptions": { "label": "Valor UPM", "textHtml": "<div></div>", "type": "float" },
            "expressionProperties": { "model|||valor_upm": "model.aux_valor_upm?.data?.response?.Aliquota ?? 0" }
        },
        {
            "key": "codigoDivida",
            "type": "next-html",
            "defaultValue": 100,
            "templateOptions": { "label": "Codigo divida", "textHtml": "<div></div>", "type": "float" },
            "expressionProperties": {
                "model|||codigoDivida": "(() => { let riskCode = { 'Inspeção Prévia': 144, 'Autodeclaração': 100 }; riskCode = riskCode[last_version.tipo_risco]; riskCode = riskCode ?? (last_version['adicionar_veiculo'].length ? 145 : 0) return riskCode;})();"
            }
        }
    ],
    "templateOptions": {
        "title": "Atividades Desenvolvidas no Local",
        "subtitle": "",
        "textHtml": "<div class=\"p-4 border-l-4 border-blue-500 text-sm text-blue-800 font-medium leading-6 bg-blue-100\">\n<div>\n<span class=\"material-icons position-relative\">info</span>\n<br>\n<strong>O Responsável Técnico</strong> é o profissional com habilitação junto ao órgão federal fiscalizador do exercício profissional, podendo atuar como pessoa física ou como responsável por pessoa jurídica, respeitando as atribuições e limitações consignadas pelo Conselho Profissional.\n<br>\n1- Preencha todos os dados \n<br>\n2- Insira o documento Registro de Responsabilidade Técnica, emitido pelo conselho de classe.\n<br>\nEx: Profissional Farmacêutico - Certidão de Regularidade Emitida pelo Conselho Federal de Farmácia (CRF/SC) \n\t<br>\n     Profissional de Nutrição - Certidão de Regularidade e Quitação (CRQ) - emitida pelo conselho de Nutrição."
    },
    "wrappers": [ "text-right", "step" ]
}